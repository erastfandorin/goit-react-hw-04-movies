{"version":3,"sources":["App/component/MoviesList/MoviesList.js","App/component/MoviesPage/SearchMovies/SearchMovies.module.css","App/component/MoviesPage/SearchMovies/SearchMovies.js","App/component/MoviesPage/MoviesPage.js"],"names":["MoviesList","films","location","map","film","key","id","to","pathname","state","from","title","module","exports","SearchMovies","handleChange","e","setState","query","target","value","handleSubmit","preventDefault","props","searchMovies","this","onSubmit","className","form","type","onChange","placeholder","formInput","required","formButton","Component","MoviesPage","searchingMoviesDate","length"],"mappings":"yIAAA,4BAoCeA,IAhCI,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAC3B,OACE,oCACE,4BACGD,EAAME,KAAI,SAAAC,GAAI,OACb,wBAAIC,IAAKD,EAAKE,IACZ,kBAAC,IAAD,CACEC,GAAI,CACFC,SAAS,WAAD,OAAaJ,EAAKE,IAC1BG,MAAO,CAAEC,KAAMR,KAGhBE,EAAKO,e,mBCfpBC,EAAOC,QAAU,CAAC,KAAO,2BAA2B,UAAY,gCAAgC,WAAa,mC,2GC8C9FC,E,YAzCb,aAAe,IAAD,8BACZ,+CAMFC,aAAe,SAAAC,GACb,EAAKC,SAAS,CAAEC,MAAOF,EAAEG,OAAOC,SARpB,EAWdC,aAAe,SAAAL,GACbA,EAAEM,iBADgB,IAEVJ,EAAU,EAAKT,MAAfS,MACR,EAAKK,MAAMC,aAAaN,IAZxB,EAAKT,MAAQ,CACXS,MAAO,IAHG,E,sEAiBJ,IACAA,EAAUO,KAAKhB,MAAfS,MACR,OACE,0BAAMQ,SAAUD,KAAKJ,aAAcM,UAAWC,QAC5C,2BACEC,KAAK,OACLT,MAAOF,EACPY,SAAUL,KAAKV,aACfgB,YAAY,gBACZJ,UAAWK,YACXC,UAAQ,IAEV,4BAAQJ,KAAK,SAASF,UAAWO,cAAjC,e,GA9BmBC,a,QCwBZC,UAvBI,SAAC,GAAqD,IAAnDlC,EAAkD,EAAlDA,SAAUmC,EAAwC,EAAxCA,oBAAqBb,EAAmB,EAAnBA,aACnD,OACE,oCACE,kBAAC,EAAD,CAAcA,aAAcA,IAC3Ba,EAAoBC,OAAS,GAC5B,kBAACtC,EAAA,EAAD,CAAYC,MAAOoC,EAAqBnC,SAAUA","file":"static/js/movies-page.b1bf6874.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\n\nconst MoviesList = ({ films, location }) => {\n  return (\n    <>\n      <ul>\n        {films.map(film => (\n          <li key={film.id}>\n            <NavLink\n              to={{\n                pathname: `/movies/${film.id}`,\n                state: { from: location },\n              }}\n            >\n              {film.title}\n            </NavLink>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nMoviesList.propTypes = {\n  films: PropTypes.arrayOf(PropTypes.object).isRequired,\n  location: PropTypes.shape({\n    state: PropTypes.shape({\n      from: PropTypes.shape({\n        pathname: PropTypes.string,\n      }),\n    }),\n  }).isRequired,\n};\n\nexport default MoviesList;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"SearchMovies_form__jd0uS\",\"formInput\":\"SearchMovies_formInput__2i2X4\",\"formButton\":\"SearchMovies_formButton__33iDR\"};","import React, { Component } from 'react';\n// import { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { form, formInput, formButton } from './SearchMovies.module.css';\n\nclass SearchMovies extends Component {\n  constructor() {\n    super();\n    this.state = {\n      query: '',\n    };\n  }\n\n  handleChange = e => {\n    this.setState({ query: e.target.value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const { query } = this.state;\n    this.props.searchMovies(query);\n  };\n\n  render() {\n    const { query } = this.state;\n    return (\n      <form onSubmit={this.handleSubmit} className={form}>\n        <input\n          type=\"text\"\n          value={query}\n          onChange={this.handleChange}\n          placeholder=\"Search Movies\"\n          className={formInput}\n          required\n        />\n        <button type=\"submit\" className={formButton}>\n          Search\n        </button>\n      </form>\n    );\n  }\n}\n\nSearchMovies.propTypes = {\n  searchMovies: PropTypes.func.isRequired,\n};\n\nexport default SearchMovies;\n","import React from 'react';\n// import { Route } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport SearchMovies from './SearchMovies/SearchMovies';\nimport MoviesList from '../MoviesList/MoviesList';\n\nconst MoviesPage = ({ location, searchingMoviesDate, searchMovies }) => {\n  return (\n    <>\n      <SearchMovies searchMovies={searchMovies} />\n      {searchingMoviesDate.length > 0 && (\n        <MoviesList films={searchingMoviesDate} location={location} />\n      )}\n    </>\n  );\n};\n\nMoviesPage.propTypes = {\n  searchingMoviesDate: PropTypes.arrayOf(PropTypes.object).isRequired,\n  searchMovies: PropTypes.func.isRequired,\n  location: PropTypes.shape({\n    state: PropTypes.shape({\n      from: PropTypes.shape({\n        pathname: PropTypes.string,\n      }),\n    }),\n  }).isRequired,\n};\n\nexport default MoviesPage;\n"],"sourceRoot":""}