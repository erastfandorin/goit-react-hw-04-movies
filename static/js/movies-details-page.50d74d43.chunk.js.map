{"version":3,"sources":["App/component/MoviesPage/MovieDetailsPage/MovieDetailsPage.module.css","App/component/MoviesPage/MovieDetailsPage/MovieDetailsPage.js"],"names":["module","exports","Cast","lazy","Reviews","MovieDetailsPage","toPercent","vote","score","setState","goBack","props","location","history","state","push","from","pathname","this","movie","match","openMovie","id","Number","params","movieId","vote_average","className","movieButton","type","onClick","movieBox","undefined","poster_path","src","alt","original_title","movieImg","descriptionMovie","overview","genres","map","genre","key","name","moreBox","to","url","fallback","path","render","Component"],"mappings":"4HACAA,EAAOC,QAAU,CAAC,YAAc,sCAAsC,SAAW,mCAAmC,iBAAmB,2CAA2C,SAAW,mCAAmC,QAAU,oC,0HCUpOC,EAAOC,gBAAK,kBAAM,gCAClBC,EAAUD,gBAAK,kBACnB,gCAGIE,E,YACJ,aAAe,IAAD,8BACZ,+CAcFC,UAAY,SAAAC,GACV,IAAMC,EAAe,GAAPD,EACd,EAAKE,SAAS,CAAED,WAjBJ,EAoBdE,OAAS,WAAO,IAAD,EACiB,EAAKC,MAA3BC,EADK,EACLA,SAAUC,EADL,EACKA,QACdD,EAASE,MACXD,EAAQE,KAAKH,EAASE,MAAME,KAAKC,UAEjCJ,EAAQE,KAAK,MAvBf,EAAKD,MAAQ,CACXN,MAAO,GAHG,E,iFAOO,IAAD,EACkBU,KAAKP,MAAjCQ,EADU,EACVA,MAAOC,EADG,EACHA,MAAOC,EADJ,EACIA,UAClBF,EAAMG,KAAOC,OAAOH,EAAMI,OAAOC,UACnCJ,EAAUD,EAAMI,OAAOC,SAEzBP,KAAKZ,UAAUa,EAAMO,gB,+BAiBb,IAAD,EACkBR,KAAKP,MAAtBQ,EADD,EACCA,MAAOC,EADR,EACQA,MACPZ,EAAUU,KAAKJ,MAAfN,MAER,OACE,oCACE,4BAAQmB,UAAWC,cAAaC,KAAK,SAASC,QAASZ,KAAKR,QAA5D,kBAGA,yBAAKiB,UAAWI,iBACSC,IAAtBb,EAAMc,YACL,2CAEA,yBACEC,IAAG,yCAAoCf,EAAMc,aAC7CE,IAAKhB,EAAMiB,eACXT,UAAWU,aAIf,yBAAKV,UAAWW,oBACd,4BAAKnB,EAAMiB,gBACX,0CAAgB5B,EAAhB,KACA,4CACA,2BAAIW,EAAMoB,UACV,0CACA,4BACGpB,EAAMqB,QACLrB,EAAMqB,OAAOC,KAAI,SAAAC,GAAK,OAAI,wBAAIC,IAAKD,EAAMpB,IAAKoB,EAAME,YAI5D,yBAAKjB,UAAWkB,WACd,qDACA,4BACE,4BACE,kBAAC,IAAD,CAASC,GAAE,UAAK1B,EAAM2B,IAAX,UAAX,SAEF,4BACE,kBAAC,IAAD,CAASD,GAAE,UAAK1B,EAAM2B,IAAX,aAAX,cAIN,kBAAC,WAAD,CAAUC,SAAU,4CAClB,kBAAC,IAAD,CACEC,KAAI,UAAK7B,EAAM6B,KAAX,SACJC,OAAQ,WACN,OAAO,kBAAChD,EAAD,CAAMiB,MAAOA,OAGxB,kBAAC,IAAD,CACE8B,KAAI,UAAK7B,EAAM6B,KAAX,YACJC,OAAQ,WACN,OAAO,kBAAC9C,EAAD,CAASe,MAAOA,a,GAnFNgC,aAuHhB9C","file":"static/js/movies-details-page.50d74d43.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"movieButton\":\"MovieDetailsPage_movieButton__2OOJT\",\"movieBox\":\"MovieDetailsPage_movieBox__2x4rj\",\"descriptionMovie\":\"MovieDetailsPage_descriptionMovie__2oeoX\",\"movieImg\":\"MovieDetailsPage_movieImg__2Mfsa\",\"moreBox\":\"MovieDetailsPage_moreBox__2zrg6\"};","import React, { Component, lazy, Suspense } from 'react';\nimport { NavLink, Route } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {\n  movieBox,\n  descriptionMovie,\n  movieImg,\n  moreBox,\n  movieButton,\n} from './MovieDetailsPage.module.css';\n\nconst Cast = lazy(() => import('./Cast/Cast' /* webpackChunkName: \"cast\" */));\nconst Reviews = lazy(() =>\n  import('./Reviews/Reviews' /* webpackChunkName: \"reviews\" */),\n);\n\nclass MovieDetailsPage extends Component {\n  constructor() {\n    super();\n    this.state = {\n      score: 0,\n    };\n  }\n\n  componentDidMount() {\n    const { movie, match, openMovie } = this.props;\n    if (movie.id !== Number(match.params.movieId)) {\n      openMovie(match.params.movieId);\n    }\n    this.toPercent(movie.vote_average);\n  }\n\n  toPercent = vote => {\n    const score = vote * 10;\n    this.setState({ score });\n  };\n\n  goBack = () => {\n    const { location, history } = this.props;\n    if (location.state) {\n      history.push(location.state.from.pathname);\n    } else {\n      history.push('/');\n    }\n  };\n\n  render() {\n    const { movie, match } = this.props;\n    const { score } = this.state;\n\n    return (\n      <>\n        <button className={movieButton} type=\"button\" onClick={this.goBack}>\n          &#8592; Go back\n        </button>\n        <div className={movieBox}>\n          {movie.poster_path === undefined ? (\n            <div>Loading...</div>\n          ) : (\n            <img\n              src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\n              alt={movie.original_title}\n              className={movieImg}\n            />\n          )}\n\n          <div className={descriptionMovie}>\n            <h1>{movie.original_title}</h1>\n            <p>User score: {score}%</p>\n            <strong>Overview</strong>\n            <p>{movie.overview}</p>\n            <strong>Genres</strong>\n            <ul>\n              {movie.genres &&\n                movie.genres.map(genre => <li key={genre.id}>{genre.name}</li>)}\n            </ul>\n          </div>\n        </div>\n        <div className={moreBox}>\n          <p>Additional information</p>\n          <ul>\n            <li>\n              <NavLink to={`${match.url}/cast`}>Cast</NavLink>\n            </li>\n            <li>\n              <NavLink to={`${match.url}/reviews`}>Reviews</NavLink>\n            </li>\n          </ul>\n        </div>\n        <Suspense fallback={<div>Loading...</div>}>\n          <Route\n            path={`${match.path}/cast`}\n            render={() => {\n              return <Cast movie={movie} />;\n            }}\n          />\n          <Route\n            path={`${match.path}/reviews`}\n            render={() => {\n              return <Reviews movie={movie} />;\n            }}\n          />\n        </Suspense>\n      </>\n    );\n  }\n}\n\nMovieDetailsPage.propTypes = {\n  movie: PropTypes.shape({\n    vote_average: PropTypes.number,\n    id: PropTypes.number,\n    poster_path: PropTypes.string,\n    original_title: PropTypes.string,\n    overview: PropTypes.string,\n    genres: PropTypes.array,\n  }).isRequired,\n  match: PropTypes.shape({\n    params: PropTypes.shape({ movieId: PropTypes.string }),\n    path: PropTypes.string,\n    url: PropTypes.string,\n  }).isRequired,\n  openMovie: PropTypes.func.isRequired,\n  location: PropTypes.shape({\n    state: PropTypes.shape({\n      from: PropTypes.shape({\n        pathname: PropTypes.string,\n      }),\n    }),\n  }).isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func,\n  }).isRequired,\n};\n\nexport default MovieDetailsPage;\n"],"sourceRoot":""}